<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.my.shop.web.admin.dao.TbUserMapper">
    <sql id="Base_Column_List">
	id,
	username,
	`password`,
	phone,
	email,
	created,
	updated
    </sql>

    <resultMap id="BaseResultMap" type="com.example.my.shop.domain.TbUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tb_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.my.shop.domain.TbUser">
        insert into tb_user (username, password,
          phone, email, created,
          updated)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
          #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP},
          #{updated,jdbcType=TIMESTAMP})
     </insert>

    <update id="updateByPrimaryKey" parameterType="com.example.my.shop.domain.TbUser">
        update tb_user
        set username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          email = #{email,jdbcType=VARCHAR},
          created = #{created,jdbcType=TIMESTAMP},
          updated = #{updated,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
     </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, username, password, phone, email, created, updated
        from tb_user
        where id = #{id,jdbcType=BIGINT}
    </select>


    <!--auto generated by MybatisCodeHelper on 2019-04-30-->
    <select id="getByEmail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where email=#{email,jdbcType=VARCHAR}
    </select>


    <delete id="deleteMulti">
        <!-- select * from student where id in (2, 4) -->
        delete FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="page" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        <where>
            <if test="likeSearch != null and likeSearch != '' ">
                email like concat ('%',#{likeSearch},'%')
                or username like concat ('%',#{likeSearch},'%')
                or phone like concat ('%',#{likeSearch},'%')
            </if>
            <if test="likeSearch == null or likeSearch == '' ">
                <if test="tbUser.email!=null and tbUser.email!=''">
                    and email like concat ('%',#{tbUser.email,jdbcType=VARCHAR},'%')
                </if>
                <if test="tbUser.username!=null and tbUser.username!=''">
                    and username like concat ('%',#{tbUser.username,jdbcType=VARCHAR},'%')
                </if>
                <if test="tbUser.phone!=null and tbUser.phone!=''">
                    and phone like concat ('%',#{tbUser.phone,jdbcType=VARCHAR},'%')
                </if>
            </if>
        </where>
        LIMIT #{start} , #{length};
    </select>

    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        select COUNT(*) FROM tb_user
        <where>
            <if test="likeSearch != null and likeSearch != '' ">
                email like concat ('%',#{likeSearch},'%')
                or username like concat ('%',#{likeSearch},'%')
                or phone like concat ('%',#{likeSearch},'%')
            </if>
            <if test="likeSearch == null or likeSearch == '' ">
                <if test="tbUser.email!=null and tbUser.email!=''">
                    and email like concat ('%',#{tbUser.email,jdbcType=VARCHAR},'%')
                </if>
                <if test="tbUser.username!=null and tbUser.username!=''">
                    and username like concat ('%',#{tbUser.username,jdbcType=VARCHAR},'%')
                </if>
                <if test="tbUser.phone!=null and tbUser.phone!=''">
                    and phone like concat ('%',#{tbUser.phone,jdbcType=VARCHAR},'%')
                </if>
            </if>
        </where>
    </select>


</mapper>